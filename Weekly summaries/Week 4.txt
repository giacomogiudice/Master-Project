Monday

This week, I try to reproduce conducting/insulating phase transition results from Giacommo's paper.

Jobs to launch :
U_c = 0.5 ; 1.1
N = 20,30,40,50,60,70.

Simulation time is N/2J , timestep 0.05/J .
Memory should be barely enough for the bigger jobs, might need to apply and cut immediately for higher chain lengths.

Conclusion : N = 70 is not manageable memory-wise. N = 60 takes ages, and 20:30:40:50 should be enough for basic scaling from now on.
Uninteracting bath results were sucesfully reproduced.

I am now going to start investigating interacting bath behavior.
To start, we will investigate the following points
Uc = 0.5 , Ub = 0.5 : Do we observe similar behavior to single junction results?


non-interacting chain line : Does anything cool happen if we swap interactions in the chain vs the bath?
Uc = 0 , Ub = 0.5 : Do we observe similar behavior to single junction results?
Uc = 0 , Ub = 1.1 : Do we observe similar behavior to single junction results?


In parallel, I have been implementing the TDVP time evolution code. I tested it on N=10 , U_c = 0.5 U_b = 0. bond dimension 100 fails
to reproduce results from TMPS algorithm. Perhaps convergence with TDVP requires larger bond dimension than TMPS? We will try for bond dimensions
200 and 300 on the same system, as well as lowering timesteps.
Increasing bond dimension did not help, but reducing timesteps did. Still not converged to the TMPS result. Perhaps TMPS suffers
from timestep size as well? Should check it's convergence.

I realized that I was incorrectly evolving the first and last sites of the chain with TDVP. Fixing this resulted in the TDVP_A
function, which seems to not mind having timestep 0.01 or 0.05, giving similar results to wrong TDVP with 0.01. Why diminishing
timestep of wrong TDVP helped is still mystery.

TDVP without evolution of the carryover results in stupid nonsense.

Now writing TDVP_A_B,which both fixes boundary timesteps and builds 1&0 site hamiltonians with only unevolved matrices, instead of
evolved matrices to the left/right of the site. Does not work at all.

Latest change to TDVP_A is TDVP_A_prime. Tries to fix assymetry of site N